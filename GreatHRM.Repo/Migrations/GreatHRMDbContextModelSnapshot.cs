// <auto-generated />
using GreatHRM.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GreatHRM.Repo.Migrations
{
    [DbContext(typeof(GreatHRMDbContext))]
    partial class GreatHRMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreatHRM.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("BranchName");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<string>("PhoneNo");

                    b.Property<byte?>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Branchs");
                });

            modelBuilder.Entity("GreatHRM.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("CompanyName")
                        .IsRequired();

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<double>("EPFPercent");

                    b.Property<string>("ESINo");

                    b.Property<double>("ESIPercent");

                    b.Property<string>("Email");

                    b.Property<string>("PFNo");

                    b.Property<double>("PFPercent");

                    b.Property<double>("PPFPercent");

                    b.Property<string>("PanCardNo");

                    b.Property<string>("PhoneNo");

                    b.Property<string>("RegistrationNo");

                    b.Property<byte?>("Status");

                    b.Property<string>("TaxNo");

                    b.Property<string>("TinNo");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.Property<string>("VatNo");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GreatHRM.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("DepartmentName");

                    b.Property<string>("HeadEmail");

                    b.Property<byte?>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("GreatHRM.Entities.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<string>("DesignationName");

                    b.Property<byte?>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("GreatHRM.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<int>("BranchId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("DesignationId");

                    b.Property<string>("Email");

                    b.Property<string>("EmployeeCode");

                    b.Property<string>("EmployeeName");

                    b.Property<string>("EnrollNo");

                    b.Property<string>("FatherName");

                    b.Property<int>("FirstWeeklyOff");

                    b.Property<string>("HalfDayShift");

                    b.Property<string>("ImageFile");

                    b.Property<bool>("IsAutoShift");

                    b.Property<DateTime?>("JoiningDate");

                    b.Property<string>("MobileNo");

                    b.Property<int>("OfficeTimePolicyId");

                    b.Property<string>("ProximityCardNo");

                    b.Property<DateTime?>("ResignationDate");

                    b.Property<byte>("SecondWOType");

                    b.Property<int>("SecondWeeklyOff");

                    b.Property<int>("ShiftId");

                    b.Property<DateTime?>("ShiftStartDate");

                    b.Property<byte>("ShiftType");

                    b.Property<byte?>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("ValidityEnd");

                    b.Property<DateTime?>("ValidityStart");

                    b.Property<int?>("WeekTimeZone1");

                    b.Property<int?>("WeekTimeZone2");

                    b.Property<int?>("WeekTimeZone3");

                    b.Property<int?>("WeekTimeZone4");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("OfficeTimePolicyId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("GreatHRM.Entities.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<DateTime>("HolidayDate");

                    b.Property<string>("HolidayName");

                    b.Property<byte?>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("GreatHRM.Entities.HolidayEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<int>("HolidayId");

                    b.Property<byte?>("Status");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HolidayId");

                    b.ToTable("HolidayEmployees");
                });

            modelBuilder.Entity("GreatHRM.Entities.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<bool>("HolidayInclude");

                    b.Property<bool>("IsLeaveCarryForward");

                    b.Property<int>("LeaveCode");

                    b.Property<bool>("PaidLeave");

                    b.Property<byte?>("Status");

                    b.Property<string>("TypeName");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.Property<bool>("WeeklyOffInclue");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("LeaveTypes");
                });

            modelBuilder.Entity("GreatHRM.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("EnrollId");

                    b.Property<byte>("Event");

                    b.Property<byte>("InOut");

                    b.Property<int>("MachineId");

                    b.Property<byte>("Mode");

                    b.Property<byte?>("Status");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("GreatHRM.Entities.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("AccessType");

                    b.Property<int>("BranchId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("MachineName");

                    b.Property<int>("MachineNo");

                    b.Property<byte>("MachineType");

                    b.Property<int>("PortNo");

                    b.Property<string>("SerialNo");

                    b.Property<byte?>("Status");

                    b.Property<int?>("TimeZone");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("GreatHRM.Entities.OfficeTimePolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan>("AbsentLess");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("CutDays");

                    b.Property<string>("DetectAs");

                    b.Property<TimeSpan>("EarlyDeparture");

                    b.Property<bool>("EnableLate");

                    b.Property<TimeSpan>("HalfDayLess");

                    b.Property<TimeSpan>("IgnoreOvertime");

                    b.Property<TimeSpan>("LateArrival");

                    b.Property<int>("NumberOfLate");

                    b.Property<bool>("OvertimeAllow");

                    b.Property<TimeSpan>("PermitedEarlyDeparture");

                    b.Property<TimeSpan>("PermittedLateArrival");

                    b.Property<string>("PolicyName");

                    b.Property<byte>("RequirePunches");

                    b.Property<byte>("ShowAsEarly");

                    b.Property<byte>("ShowAsLate");

                    b.Property<byte>("SinglePunch");

                    b.Property<byte?>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("OfficeTimePolicies");
                });

            modelBuilder.Entity("GreatHRM.Entities.SecondWeeklyOff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<int?>("EmployeeId");

                    b.Property<int?>("ShiftId");

                    b.Property<byte?>("Status");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ShiftId");

                    b.ToTable("SecondWeeklyOffs");
                });

            modelBuilder.Entity("GreatHRM.Entities.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AAA");

                    b.Property<TimeSpan>("Break1Begin");

                    b.Property<TimeSpan>("Break1Duration");

                    b.Property<TimeSpan>("Break1End");

                    b.Property<TimeSpan>("Break2Begin");

                    b.Property<TimeSpan>("Break2Duration");

                    b.Property<TimeSpan>("Break2End");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<TimeSpan>("Duration");

                    b.Property<TimeSpan>("EndTime");

                    b.Property<int>("FirstWeeklyOff");

                    b.Property<string>("HalfDayShift");

                    b.Property<bool>("LWOL");

                    b.Property<TimeSpan>("MaxEarlyHourAllow");

                    b.Property<TimeSpan>("MaxOTAllow");

                    b.Property<int>("NoOfPresentForWeekend");

                    b.Property<byte>("OTCalculation");

                    b.Property<TimeSpan>("RemoveDuplicatePunch");

                    b.Property<byte>("SecondWOType");

                    b.Property<int>("SecondWeeklyOff");

                    b.Property<string>("ShiftCode");

                    b.Property<string>("ShiftDetail");

                    b.Property<string>("ShiftName");

                    b.Property<byte>("SinglePunchPolicy");

                    b.Property<TimeSpan>("StartTime");

                    b.Property<byte?>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.Property<byte>("WorkingCalculation");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("GreatHRM.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AllowAccessControl");

                    b.Property<bool>("AllowAdminPermission");

                    b.Property<bool>("AllowLeave");

                    b.Property<bool>("AllowPayroll");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<int?>("CreatedBy");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("ImageFile");

                    b.Property<string>("Mobile");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("RoleId");

                    b.Property<byte?>("Status");

                    b.Property<bool>("SupUser");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedBy");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GreatHRM.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<byte?>("Status");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("GreatHRM.Entities.UserRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Permission")
                        .HasMaxLength(1000);

                    b.Property<int>("RoleId");

                    b.Property<byte?>("Status");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRolePermissions");
                });

            modelBuilder.Entity("GreatHRM.Entities.Branch", b =>
                {
                    b.HasOne("GreatHRM.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.Company", b =>
                {
                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.Department", b =>
                {
                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.Designation", b =>
                {
                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.Employee", b =>
                {
                    b.HasOne("GreatHRM.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.OfficeTimePolicy", "OfficeTimePolicy")
                        .WithMany()
                        .HasForeignKey("OfficeTimePolicyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.Holiday", b =>
                {
                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.HolidayEmployee", b =>
                {
                    b.HasOne("GreatHRM.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.Holiday", "Holiday")
                        .WithMany()
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreatHRM.Entities.LeaveType", b =>
                {
                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.Log", b =>
                {
                    b.HasOne("GreatHRM.Entities.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreatHRM.Entities.Machine", b =>
                {
                    b.HasOne("GreatHRM.Entities.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.OfficeTimePolicy", b =>
                {
                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.SecondWeeklyOff", b =>
                {
                    b.HasOne("GreatHRM.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("GreatHRM.Entities.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");
                });

            modelBuilder.Entity("GreatHRM.Entities.Shift", b =>
                {
                    b.HasOne("GreatHRM.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("GreatHRM.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });

            modelBuilder.Entity("GreatHRM.Entities.User", b =>
                {
                    b.HasOne("GreatHRM.Entities.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreatHRM.Entities.UserRolePermission", b =>
                {
                    b.HasOne("GreatHRM.Entities.UserRole", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
